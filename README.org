* Implementation of typical numeric methods in =C++=

  This repository is meant only for academic purpose. It shows my
  implementations of some typical numeric methods in =C++=, that I wrote while
  learning the language. These are the methods that I have implemented so far:

  - *Root finding algorithms for 1D real functions* ::

    + *Bisection method* -- implemented in =src/roots-1d/bisection.cpp= file.
    + *Iterative method* -- implementated in =src/roots-1d/iterative.cpp=
      file. The implementation is very basic and it does not check any kind of
      convergence of the g(x) = x function at the guess values of x.
    + *Newton-Raphson method* -- implemented in =src/roots-1d/bisecion.cpp=
      file. Basin implementation withouth further consistency checking

** Building the project

   This project can be built using CMake. At its current stage, it generates
   some executable examples in the =examples/= folder. In UNIX like systems, the
   project can be built by simply moving to the project's folder in the terminal
   and then typing:

   #+begin_src sh
     mkdir build
     cd build
     cmake .. && make
   #+end_src

   The first line creates a directory =build/= in project root directory and
   moves you into it. In this way, all the files generated by CMake stay in that
   folder and the rest of the project tree remains clean. The second line move
   you into the folder.

   Finally, the third line builds the source code and creates example
   executables in the =examples/= folder that you can run. 
  
